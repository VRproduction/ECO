# Generated by Django 4.2.11 on 2024-08-01 08:32

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_az', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_az', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='about', verbose_name='image(585x666)px')),
            ],
            options={
                'verbose_name': 'Haqqımızda',
                'verbose_name_plural': 'Haqqımızda',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('title_az', models.CharField(max_length=500, null=True, unique=True)),
                ('title_en', models.CharField(max_length=500, null=True, unique=True)),
                ('title_ru', models.CharField(max_length=500, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('description_az', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('image', models.ImageField(upload_to='blogs', verbose_name='photo(370x290)')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_main_page', models.BooleanField(default=False, verbose_name='Əsas səhifədə görünsün?')),
                ('keywords', models.TextField(blank=True, null=True)),
                ('keywords_az', models.TextField(blank=True, null=True)),
                ('keywords_en', models.TextField(blank=True, null=True)),
                ('keywords_ru', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_description_az', models.TextField(blank=True, null=True)),
                ('meta_description_en', models.TextField(blank=True, null=True)),
                ('meta_description_ru', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Bloglar',
                'verbose_name_plural': 'Bloglar',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('number', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Mesaj',
                'verbose_name_plural': 'Mesajlar',
            },
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='contact_page')),
            ],
            options={
                'verbose_name': 'Əlaqə səhifəsi',
                'verbose_name_plural': 'Əlaqə səhifəsi',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon', models.CharField(max_length=50)),
                ('discount_percent', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kupon',
                'verbose_name_plural': 'Kuponlar',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_az', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_az', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'Sual',
                'verbose_name_plural': 'Suallar',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title1', models.CharField(max_length=200)),
                ('title1_az', models.CharField(max_length=200, null=True)),
                ('title1_en', models.CharField(max_length=200, null=True)),
                ('title1_ru', models.CharField(max_length=200, null=True)),
                ('title2', models.CharField(max_length=200)),
                ('title2_az', models.CharField(max_length=200, null=True)),
                ('title2_en', models.CharField(max_length=200, null=True)),
                ('title2_ru', models.CharField(max_length=200, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='featured')),
            ],
            options={
                'verbose_name': 'Özəllik',
                'verbose_name_plural': 'Özəlliklər',
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(max_length=200, verbose_name='Saytın başlığı')),
                ('site_title_az', models.CharField(max_length=200, null=True, verbose_name='Saytın başlığı')),
                ('site_title_en', models.CharField(max_length=200, null=True, verbose_name='Saytın başlığı')),
                ('site_title_ru', models.CharField(max_length=200, null=True, verbose_name='Saytın başlığı')),
                ('adress', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Ünvan')),
                ('adress_az', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Ünvan')),
                ('adress_en', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Ünvan')),
                ('adress_ru', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Ünvan')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('g_adress', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Google Map linki')),
                ('g_adress_iframe', models.TextField(blank=True, null=True, verbose_name='Google Map Iframe linki')),
                ('logo', models.FileField(blank=True, upload_to='general_settings_logo', verbose_name='logo(171x38)')),
                ('mobile_logo', models.FileField(blank=True, help_text='Mobile logo', null=True, upload_to='general_settings_mobile_logo', verbose_name='Mobile logo(172x38)')),
                ('favicon', models.FileField(blank=True, null=True, upload_to='general_settings_favicon', verbose_name='favicon(100x100)')),
                ('footer_logo', models.FileField(blank=True, help_text='Footer logo', null=True, upload_to='general_settings_footer_logo')),
                ('footer_slogan', models.TextField(blank=True, null=True)),
                ('footer_slogan_az', models.TextField(blank=True, null=True)),
                ('footer_slogan_en', models.TextField(blank=True, null=True)),
                ('footer_slogan_ru', models.TextField(blank=True, null=True)),
                ('copyright_title', models.CharField(blank=True, max_length=100)),
                ('copyright_title_az', models.CharField(blank=True, max_length=100, null=True)),
                ('copyright_title_en', models.CharField(blank=True, max_length=100, null=True)),
                ('copyright_title_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('copyright_link', models.TextField(blank=True, null=True)),
                ('facebook', models.CharField(blank=True, max_length=200, verbose_name='Facebook')),
                ('instagram', models.CharField(blank=True, max_length=200, verbose_name='Instagram')),
                ('youtube', models.CharField(blank=True, max_length=200, verbose_name='Youtube')),
                ('tiktok', models.CharField(blank=True, max_length=200, verbose_name='TikTok')),
                ('work_start_hour', models.TimeField(null=True, verbose_name='İşin başlama saatı')),
                ('work_finish_hour', models.TimeField(null=True, verbose_name='İşin bitmə saatı')),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'General Settings',
            },
        ),
        migrations.CreateModel(
            name='IndexSlider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_az', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('mobile_title', models.CharField(max_length=500, null=True)),
                ('mobile_title_az', models.CharField(max_length=500, null=True)),
                ('mobile_title_en', models.CharField(max_length=500, null=True)),
                ('mobile_title_ru', models.CharField(max_length=500, null=True)),
                ('description', models.CharField(max_length=500)),
                ('description_az', models.CharField(max_length=500, null=True)),
                ('description_en', models.CharField(max_length=500, null=True)),
                ('description_ru', models.CharField(max_length=500, null=True)),
                ('mobile_description', models.CharField(max_length=500, null=True)),
                ('mobile_description_az', models.CharField(max_length=500, null=True)),
                ('mobile_description_en', models.CharField(max_length=500, null=True)),
                ('mobile_description_ru', models.CharField(max_length=500, null=True)),
                ('image', models.ImageField(upload_to='index_slider')),
                ('mobile_image', models.ImageField(blank=True, null=True, upload_to='index_slider_mobile', verbose_name='Mobile photo(366x350px)')),
            ],
            options={
                'verbose_name': 'Slayder',
                'verbose_name_plural': 'Ana səhifə | Slayder',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField()),
                ('discount', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tracking_url', models.URLField(blank=True, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=100, null=True)),
                ('wolt_order_reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_wolt', models.BooleanField(default=False)),
                ('order_type', models.CharField(choices=[('Yeni', 'Yeni'), ('Paketlənən', 'Paketlənən'), ('Təhvilə hazır', 'Təhvilə hazır'), ('Tamamlanmış', 'Tamamlanmış'), ('Ləğv edilib', 'Ləğv edilib')], default='Yeni', max_length=20, verbose_name='Sifariş növü')),
                ('box_choice', models.CharField(blank=True, choices=[('Kiçik', 'Kiçik'), ('Orta', 'Orta'), ('Böyük', 'Böyük')], max_length=20, null=True, verbose_name='Qutu seçimi')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='product.coupon')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='payment.transaction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sifariş',
                'verbose_name_plural': 'Sifarişlər',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_az', models.CharField(max_length=100, null=True)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(upload_to='partners')),
            ],
            options={
                'verbose_name': 'Tərəfdaş',
                'verbose_name_plural': 'Tərəfdaşlar',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('title_az', models.CharField(max_length=500, null=True, unique=True)),
                ('title_en', models.CharField(max_length=500, null=True, unique=True)),
                ('title_ru', models.CharField(max_length=500, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_az', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('using_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='İstifadə müddəti')),
                ('badges', models.IntegerField(blank=True, choices=[(1, 'Ən çox satılan'), (2, 'Yeni'), (3, 'Endirim'), (4, '4-cü')], null=True)),
                ('image', models.ImageField(upload_to='product')),
                ('price', models.FloatField()),
                ('discount', models.PositiveIntegerField(blank=True, null=True)),
                ('is_main_page', models.BooleanField(default=False, verbose_name='Ana səhifədə görünən')),
                ('stock', models.PositiveIntegerField(default=0, null=True)),
                ('sale_count', models.PositiveIntegerField(default=0, null=True, verbose_name='Satış sayı')),
                ('is_best_seller', models.BooleanField(default=False, verbose_name='Ən çox satılan')),
                ('is_most_wonted', models.BooleanField(default=False, verbose_name='Ən çox axtarılan')),
                ('is_trending', models.BooleanField(default=False, verbose_name='Trenddə olan')),
                ('barcode_code', models.BigIntegerField(default=0, verbose_name='Məhsulun barkodu')),
                ('product_code', models.IntegerField(blank=True, null=True, verbose_name='Məhsulun kodu')),
                ('keywords', models.TextField(blank=True, null=True)),
                ('keywords_az', models.TextField(blank=True, null=True)),
                ('keywords_en', models.TextField(blank=True, null=True)),
                ('keywords_ru', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_description_az', models.TextField(blank=True, null=True)),
                ('meta_description_en', models.TextField(blank=True, null=True)),
                ('meta_description_ru', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Məhsul',
                'verbose_name_plural': 'Məhsullar',
                'ordering': ['-stock', '-pk'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('title_az', models.CharField(max_length=200, null=True, unique=True)),
                ('title_en', models.CharField(max_length=200, null=True, unique=True)),
                ('title_ru', models.CharField(max_length=200, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(upload_to='category')),
                ('is_main_page', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Kateqoriya',
                'verbose_name_plural': 'Kateqoriyalar',
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('product', models.BigIntegerField(blank=True, null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('brend', models.IntegerField(blank=True, null=True)),
                ('new_taste', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='statistic', verbose_name='img(610x315)')),
            ],
            options={
                'verbose_name': 'Statistika',
                'verbose_name_plural': 'Statistika',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_az', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendorlar',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
            options={
                'verbose_name': 'Şəkil',
                'verbose_name_plural': 'Şəkillər',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.vendor'),
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=200, null=True)),
                ('is_main', models.BooleanField(default=False)),
                ('setting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numbers', to='product.generalsettings')),
            ],
            options={
                'verbose_name': 'Nömrə',
                'verbose_name_plural': 'Nömrələr',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='product.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='product.product')),
            ],
            options={
                'verbose_name': 'Məhsul',
                'verbose_name_plural': 'Məhsullar',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Məhsul',
                'verbose_name_plural': 'Sevimlilər',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='company', verbose_name='image(379x335)px')),
                ('discount', models.FloatField(blank=True, null=True)),
                ('finish_time', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company', to='product.product')),
            ],
            options={
                'verbose_name': 'Kompaniya',
                'verbose_name_plural': 'Kompaniyalar',
            },
        ),
        migrations.CreateModel(
            name='CategoryBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_az', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('image', models.ImageField(upload_to='category_banner')),
                ('category', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banners', to='product.productcategory')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Ana səhifə | Seçilmiş Kategoriyalar | Banner',
            },
        ),
        migrations.CreateModel(
            name='BasketItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basket_items', to='product.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basket_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Məhsul',
                'verbose_name_plural': 'Səbətdəki məhsullar',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Gözləmədə', 'Gözləmədə'), ('Hazırlandı', 'Hazırlandı'), ('Göndərilib', 'Göndərilib'), ('Çatdırılıb', 'Çatdırılıb'), ('Ləğv edilib', 'Ləğv edilib')], default='Gözləmədə', max_length=20)),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Təsdiqlənib')),
                ('ordering', models.IntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='product.order')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuslar',
                'ordering': ['order', 'ordering'],
                'unique_together': {('status', 'order')},
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_coupon_usage_count', models.PositiveIntegerField(default=1)),
                ('used_at', models.DateTimeField(auto_now=True)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to='product.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kupon',
                'verbose_name_plural': 'İstifadə edilən kuponlar',
                'unique_together': {('user', 'coupon')},
            },
        ),
    ]
